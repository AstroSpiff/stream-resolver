version: "3.9"

services:
  resolver:
    container_name: py-resolver
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8791:8791"
    # Bind mounts: usi i file della tua repo direttamente nel container
    volumes:
      # Codice app (incluso static/admin per la GUI)
      - ./app:/app/app
      # Config persistenti (settings.json, playlists.json, cache liste)
      - ./config:/app/config
      # Resolvers esterni (sola lettura)
      - ./resolvers:/opt/external-resolvers:ro
      # (opzionale) Sovrascrivi solo il domains.json usato dai resolvers
      - ./resolvers/config/domains.json:/opt/external-resolvers/config/domains.json:ro
    environment:
      # Queste variabili non sono obbligatorie perchÃ© il tuo main.py ha default sensati,
      # ma le espongo per chiarezza (puoi anche rimuoverle):
      APP_DIR: /app
      CONFIG_DIR: /app/config
      STATIC_DIR: /app/app/static
      # Per i resolvers Python esterni che le leggono:
      RESOLVERS_DIR: /opt/external-resolvers
      DOMAINS_JSON: /opt/external-resolvers/config/domains.json
      PYTHONUNBUFFERED: "1"
      TZ: "Europe/Rome"
    restart: unless-stopped
    # Uvicorn lanciato come nel tuo compose
    command: >
      uvicorn app.main:APP
      --host 0.0.0.0
      --port 8791
      --proxy-headers
      --forwarded-allow-ips='*'
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8791/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      web:
        aliases:
          - playlist-resolver

networks:
  web:
    external: true
